service: thmanyah-backend

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  environment:
    DATABASE_URL: postgresql://postgres:g;AM2Rb9&f3R@database-1.cw1sgcsyoxjz.us-east-1.rds.amazonaws.com:5432/postgres
  iamRoleStatements:
    - Effect: Allow
      Action:
        - rds:*
      Resource: "*"

package:
  patterns:
    - 'prisma/schema.prisma'
    - 'generated/**'
    - 'node_modules/@prisma/client/**'
    - 'node_modules/.prisma/**'

functions:
  api:
    handler: src/lambda.handler
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: false
    exclude: ['@prisma/client', '.prisma']
    target: 'node18'
    define: {}
    platform: 'node'
    concurrency: 10
  serverless-offline:
    httpPort: 3001 